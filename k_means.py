# -*- coding: utf-8 -*-
"""Copia de K-Means.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1K9jmVSmD9jBQE2nKIdgEq9epdebGlw7h

# K-Means

## Importar Librerias
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

"""## Importar el dataset o conjunto de datos"""

dataset = pd.read_csv('Mall_Customers.csv')

dataset.head()

x = dataset.iloc[:, [3, 4]].values

"""## Usando el método del codo para encontrar el número óptimo de grupos"""

from sklearn.cluster import KMeans
wcss = []
for i in range(1, 11):
    kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 0)
    kmeans.fit(x)
    wcss.append(kmeans.inertia_)
plt.plot(range(1, 11), wcss)
plt.title('Método del codo')
plt.xlabel('Número de grupos')
plt.ylabel('WCSS')
plt.show()

"""## Entrenamiento del modelo K-Means en el conjunto de datos"""

kmeans = KMeans(n_clusters = 5, init = 'k-means++', random_state = 0)
y_kmeans = kmeans.fit_predict(x)

print(y_kmeans)

"""## Visualizando los clusters"""

plt.scatter(x[y_kmeans == 0, 0], x[y_kmeans == 0, 1], s = 100, c = 'red', label = 'Cluster 1')
plt.scatter(x[y_kmeans == 1, 0], x[y_kmeans == 1, 1], s = 100, c = 'blue', label = 'Cluster 2')
plt.scatter(x[y_kmeans == 2, 0], x[y_kmeans == 2, 1], s = 100, c = 'green', label = 'Cluster 3')
plt.scatter(x[y_kmeans == 3, 0], x[y_kmeans == 3, 1], s = 100, c = 'cyan', label = 'Cluster 4')
plt.scatter(x[y_kmeans == 4, 0], x[y_kmeans == 4, 1], s = 100, c = 'magenta', label = 'Cluster 5')
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 300, c = 'yellow', label = 'Centroides')
plt.title('Clusters de clientes')
plt.xlabel('Ingreso Anual (k$)')
plt.ylabel('Puntuación de gasto (1-100)')
plt.legend()
plt.show()