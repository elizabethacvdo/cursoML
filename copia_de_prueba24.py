# -*- coding: utf-8 -*-
"""Copia de Prueba24.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nKBCNNb7XbkjcMdPDZvgZyo1KliNs3AN

#**El HOLA MUNDO del computer vision**
"""

import tensorflow as tf

#Importando dataset
mnist = tf.keras.datasets.mnist

#load_data devuelve dos listas, una de entrenamiento y una de testeo



(training_images, training_labels), (test_images, test_labels) = mnist.load_data()

#Visualizando elementos del dataset
import numpy as np
np.set_printoptions(linewidth=200)
import matplotlib.pyplot as plt
plt.imshow(training_images[0])
print(training_labels[0])
print(training_images[0])

#Normalizando valores
trainig_images = training_images / 255.0
test_images = test_images / 255.0

#Creando arquitectura del modelo
model = tf.keras.models.Sequential([tf.keras.layers.Flatten(),
                                    tf.keras.layers.Dense(128, activation=tf.nn.relu),
                                    tf.keras.layers.Dense(10, activation=tf.nn.softmax)])

model.compile(optimizer=tf.optimizers.Adam(),
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

model.fit(trainig_images, training_labels, epochs=10)

#Evaluaci√≥n del modelo
model.evaluate(test_images, test_labels)

#Haciendo predicciones
classification = model.predict(test_images)

#Visualizando resultados
labels = ['T-shirt/top', 'Trouser', 'Pullover', 'Dress', 'Coat', 'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']
img2show = 3
print(classification[img2show])
print(test_labels[img2show])
plt.imshow(test_images[img2show])
print(labels[test_labels[img2show]])

